{% macro sync_partitions(sync_database, sync_table) %}
    {{ log("üìå –ù–∞—á–∞–ª–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–∞—Ä—Ç–∏—Ü–∏–π –¥–ª—è " ~ sync_database ~ "." ~ sync_table, info=True) }}

    {# 1. OPTIMIZE TABLE FINAL #}
    {% set optimize_sql %}
    OPTIMIZE TABLE {{ sync_database }}.{{ sync_table }}_write ON CLUSTER write_cluster FINAL;
{% endset %}
    {{ log("üìå –í—ã–ø–æ–ª–Ω—è–µ–º OPTIMIZE FINAL: " ~ optimize_sql, info=True) }}
    {% do run_query(optimize_sql) %}

    {# 2. –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ –ø–∞—Ä—Ç–∏—Ü–∏–∏ —Å –ø—Ä–æ—à–ª–æ–≥–æ —Ä–∞–∑–∞ #}
    {% set partitions_sql %}
SELECT DISTINCT partition
FROM system.parts
WHERE database = '{{ sync_database }}'
  AND table = '{{ sync_table }}_write'
  AND modification_time > (
    SELECT ifNull(max(sync_time), '1970-01-01 00:00:00')
    FROM {{ sync_database }}.sync_log
    )
    {% endset %}
    {% set partitions_result = safe_run_query(partitions_sql) %}

    {% if partitions_result|length == 0 %}
    {{ log("‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–∏—Ü–∏–π. –ü–µ—Ä–µ–Ω–æ—Å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.", info=True) }}
    {{ return("SELECT 'Ok'") }}
    {% endif %}

    {# 3. –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–∞—Ä—Ç–∏—Ü–∏–∏ –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º REPLACE PARTITION #}
    {% for row in partitions_result %}
    {% set part = row['partition'] %}
    {{ log("üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä—Ç–∏—Ü–∏–∏: " ~ part, info=True) }}

    {# REPLACE PARTITION #}
    {% set replace_sql %}
ALTER TABLE {{ sync_database }}.{{ sync_table }}
    ON CLUSTER write_cluster REPLACE PARTITION '{{ part }}'
    FROM {{ sync_database }}.{{ sync_table }}_write;
{% endset %}
        {{ log("üìå –í—ã–ø–æ–ª–Ω—è–µ–º REPLACE PARTITION: " ~ replace_sql, info=True) }}
        {% do run_query(replace_sql) %}

        {# 4. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–∞—Ä—Ç–∏—Ü–∏–∏ #}
        {% set stats_sql %}
SELECT
    partition,
    sum(rows) AS row_count,
    sum(bytes_on_disk) AS size_bytes
FROM system.parts
WHERE database = '{{ sync_database }}'
  AND table = '{{ sync_table }}'
  AND partition = '{{ part }}'
GROUP BY partition;
{% endset %}
        {% set stats_result = safe_run_query(stats_sql) %}
        {% set row_count = stats_result[0]['row_count'] if stats_result|length > 0 else 0 %}
        {% set size_bytes = stats_result[0]['size_bytes'] if stats_result|length > 0 else 0 %}

        {# 5. –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–Ω–æ—Å–∞ –≤ sync_log #}
        {% set log_sql %}
        INSERT INTO {{ sync_database }}.sync_log (partition, sync_time, row_count, size_bytes, error_message, error_time)
        VALUES ('{{ part }}', now(), {{ row_count }}, {{ size_bytes }}, '', now());
{% endset %}
        {{ log("üìå –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ sync_log: " ~ log_sql, info=True) }}
        {% do run_query(log_sql) %}
    {% endfor %}

    {{ log("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä—Ç–∏—Ü–∏–∏: " ~ partitions_result | map(attribute='partition') | join(', '), info=True) }}
    {{ return("SELECT 'Ok'") }}
{% endmacro %}
